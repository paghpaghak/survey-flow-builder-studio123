import 'dotenv/config';
import app from './app.js';
import { DatabaseConfig } from './config/database.js';

const port = process.env.PORT || 3001;

/**
 * –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */
async function startServer(): Promise<void> {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    console.log('Connecting to MongoDB...');
    await DatabaseConfig.connect();
    console.log('‚úÖ Connected to MongoDB successfully');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const db = DatabaseConfig.getDb();
    const collectionsInitialized = await DatabaseConfig.initializeCollections(db);
    
    if (collectionsInitialized) {
      console.log('‚úÖ Database collections initialized successfully');
    } else {
      console.log('‚ö†Ô∏è Some collections failed to initialize');
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    app.listen(port, () => {
      console.log(`üöÄ Server running on port ${port}`);
      console.log(`üìö Swagger UI available at http://localhost:${port}/api-docs`);
      console.log(`üè• Health check at http://localhost:${port}/api/health`);
    });
    
  } catch (error) {
    console.error('‚ùå Failed to start server:', error);
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ graceful shutdown
process.on('SIGINT', () => {
  console.log('\nüîÑ Received SIGINT, shutting down gracefully...');
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\nüîÑ Received SIGTERM, shutting down gracefully...');
  process.exit(0);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
startServer(); 